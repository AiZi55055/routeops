name: CI â€” Web

on:
  push:
    paths:
      - 'src/**'
      - 'public/**'
      - 'vite.config.*'
      - 'tsconfig*.json'
      - 'package.json'
      - 'package-lock.json'
      - 'pnpm-lock.yaml'
      - 'yarn.lock'
      - '.github/workflows/web.yml'
      - 'web/**'
      - 'frontend/**'
      - 'app/**'
  pull_request:
    paths:
      - 'src/**'
      - 'public/**'
      - 'vite.config.*'
      - 'tsconfig*.json'
      - 'package.json'
      - 'package-lock.json'
      - 'pnpm-lock.yaml'
      - 'yarn.lock'
      - '.github/workflows/web.yml'
      - 'web/**'
      - 'frontend/**'
      - 'app/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect frontend directory
        id: detect
        shell: bash
        run: |
          candidates=("." "web" "frontend" "app")
          found=""
          for d in "${candidates[@]}"; do
            if [ -f "$d/package.json" ]; then
              found="$d"
              break
            fi
          done
          if [ -z "$found" ]; then
            echo "No package.json found in ., web, frontend, or app. Skipping web build."
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "Found frontend at: $found"
            echo "dir=$found" >> "$GITHUB_OUTPUT"
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Stop early if nothing to build
        if: steps.detect.outputs.skip == 'true'
        run: echo "No web workspace detected. Job succeed by noop."

      - name: Use Node.js
        if: steps.detect.outputs.skip != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: '${{ steps.detect.outputs.dir }}/package-lock.json'

      - name: Enable corepack (pnpm/yarn support)
        if: steps.detect.outputs.skip != 'true'
        run: corepack enable

      - name: Install deps (auto-detect package manager)
        if: steps.detect.outputs.skip != 'true'
        shell: bash
        run: |
          cd "${{ steps.detect.outputs.dir }}"
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile
          elif [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Typecheck
        if: steps.detect.outputs.skip != 'true'
        run: |
          cd "${{ steps.detect.outputs.dir }}"
          npm run typecheck --if-present || true

      - name: Lint
        if: steps.detect.outputs.skip != 'true'
        run: |
          cd "${{ steps.detect.outputs.dir }}"
          npm run lint --if-present || true

      - name: Build
        if: steps.detect.outputs.skip != 'true'
        run: |
          cd "${{ steps.detect.outputs.dir }}"
          npm run build --if-present || true
